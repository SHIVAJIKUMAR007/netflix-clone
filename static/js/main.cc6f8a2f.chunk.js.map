{"version":3,"sources":["user.png","axios.js","Loder.jsx","Row.jsx","movies.js","Banner.jsx","Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","Loder","class","Row","name","url","useState","Data","setData","useEffect","a","get","response","data","results","fetchData","className","style","fontSize","map","movie","key","id","src","poster_path","alt","API_KEY","movies","trending","originals","topRated","Action","Comedy","Horror","Romance","Documentry","Banner","setBanner","data2","index","Math","floor","random","console","log","fetch","backdrop_path","width","height","margin","marginTop","img","marginLeft","original_name","overview","Footer","color","backgroundColor","display","alignItems","justifyContent","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cc6f8a2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.991f9ef8.png\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\n\r\nfunction Loder() {\r\n  return <div class=\"loader\"></div>;\r\n}\r\n\r\nexport default Loder;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport Loder from \"./Loder\";\r\n\r\nfunction Row({ name, url }) {\r\n  const [Data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(url);\r\n      const data = await response.data;\r\n      setData(data.results);\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return (\r\n    <div className=\"rowOfMovie\">\r\n      <h3 style={{ fontSize: \"1.4rem\" }}>{name}</h3>\r\n      <div className=\"rowList\">\r\n        {Data ? (\r\n          Data.map((movie) => (\r\n            <img\r\n              key={`${movie?.id}`}\r\n              className=\"imageDiv\"\r\n              src={`http://image.tmdb.org/t/p/w185${movie?.poster_path}`}\r\n              alt={`${movie?.name}`}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Loder />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"abfa9f67f148b55780a6395ab8ce9aca\";\r\n\r\nconst movies = {\r\n  trending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  originals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  topRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  Action: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  Comedy: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  Horror: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  Romance: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  Documentry: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default movies;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport movies from \"./movies\";\r\nimport axios from \"./axios\";\r\nimport img from \"./user.png\";\r\n\r\nfunction Banner() {\r\n  const [Banner, setBanner] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const data = await axios.get(movies.originals);\r\n      const data2 = await data.data.results;\r\n      let index = Math.floor(Math.random() * 20);\r\n      setBanner(data2[index]);\r\n      console.log(data2[index]);\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"banner\">\r\n      <img\r\n        className=\"banner_poster\"\r\n        src={`http://image.tmdb.org/t/p/w185${Banner.backdrop_path}`}\r\n        alt={`${Banner.name}`}\r\n      />\r\n      <div className=\"banner_desc\">\r\n        <div className=\"logo\">\r\n          <div>\r\n            <img\r\n              src=\"https://lh3.googleusercontent.com/proxy/at1zQaGZJiwOC3BMWZJhMn0qTwF0nbjesBTyFio1cXtn5o9m12EqGwR904kSEELUsibH8-kRtGe4rR2oAAv3NcJESp8elHotAI2bSPiqCeKcbgyEB2g\"\r\n              alt=\"logo\"\r\n              style={{\r\n                width: \"14rem\",\r\n                // objectFit: \"contain\",\r\n                height: \"7rem\",\r\n                margin: \"0 0\",\r\n              }}\r\n            />\r\n          </div>\r\n          <div></div>\r\n          <div style={{ marginTop: \"1rem\" }}>\r\n            <img\r\n              src={img}\r\n              alt=\"logo\"\r\n              style={{\r\n                width: \"4rem\",\r\n                marginLeft: \"auto\",\r\n                height: \"4rem\",\r\n                margin: \"0 0\",\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* title  */}\r\n        <div className=\"desccription\">\r\n          <h1> {`${Banner?.name}` || `${Banner.original_name}`} </h1>\r\n          <div className=\"banner_button\">\r\n            <button>Play Now</button>\r\n            <button>My List</button>\r\n          </div>\r\n          <span> {Banner.overview} </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div\r\n      style={{\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <h4> @2020-21 shivaji-netflix.com || All Rights Resered</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport movies from \"./movies\";\nimport Banner from \"./Banner\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"appBody\">\n        <header className=\"App-header\">\n          <Banner />\n        </header>\n        <main>\n          <Row key=\"1\" name=\"Netflix Trending\" url={movies.trending} />\n          <Row key=\"2\" name=\"Netflix Originals\" url={movies.originals} />\n          <Row key=\"3\" name=\"Top Rated\" url={movies.topRated} />\n          <Row key=\"4\" name=\"Action\" url={movies.Action} />\n          <Row key=\"5\" name=\"Commedy\" url={movies.Comedy} />\n          <Row key=\"6\" name=\"Horror\" url={movies.Horror} />\n          <Row key=\"7\" name=\"Romantic\" url={movies.Romance} />\n          <Row key=\"8\" name=\"Documentry\" url={movies.Documentry} />\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}